"""Add initial tables

Revision ID: 67994ef648ef
Revises: 
Create Date: 2024-01-24 01:05:40.455622

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '67994ef648ef'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('datafiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('type', sa.Enum('yearly', 'monthly', 'corpus', 'other', name='datafiletype'), nullable=False),
    sa.Column('record_count', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('status', sa.Enum('active', 'generating', 'hidden', 'deleted', name='datafilestatus'), nullable=False),
    sa.Column('location', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_datafiles_slug'), 'datafiles', ['slug'], unique=False)
    op.create_index(op.f('ix_datafiles_status'), 'datafiles', ['status'], unique=False)
    op.create_index(op.f('ix_datafiles_type'), 'datafiles', ['type'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('user_level', sa.Enum('anonymous', 'user', 'editor', 'staff', 'admin', name='userlevel'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('datafile_permissions',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('data_file_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['data_file_id'], ['datafiles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'data_file_id')
    )
    op.create_table('datafiletype_permissions',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('data_file_type', sa.Enum('yearly', 'monthly', 'corpus', 'other', name='datafiletype'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'data_file_type')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('datafiletype_permissions')
    op.drop_table('datafile_permissions')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_datafiles_type'), table_name='datafiles')
    op.drop_index(op.f('ix_datafiles_status'), table_name='datafiles')
    op.drop_index(op.f('ix_datafiles_slug'), table_name='datafiles')
    op.drop_table('datafiles')
    # ### end Alembic commands ###
